c
diff.each_chunk { |a| puts a[0..10] }; nil
diff.each_chunk { |a| puts a[0] }
diff.each_chunk { |a| puts a }
diff.methods
diffy.methods
diff
diff.length
dif
diff.length
diff[0]
diff
exit
c
response.body
response
response.body
response.methods
response.success
response.body
response.code
response.error_type
response.methods
response.code
response.status
response
response.status_code
response.status
response
c
e
c
File.open("lib/cli/current_state.yml", "w") { |file| file.write(new_state.to_yaml) }
File.open("lib/cli/current_state.yml", "w")
File.open("cli/current_state.yml", "w")
File.open("./cli/current_state.yml", "w")
c
File.open("current_state.yml", "w")
c
ENV["PAIRPROGRAMMER_PROJECT"]
c
ENV["PAIRPROGRAMMER_PROJECT"]
ENV["PAIRPROGRAMMER_PROJECT"] = project
project
ENV["PAIRPROGRAMMER_PROJECT"]
c
ENV["PAIRPROGRAMMER_PROJECT"]
c
%x{sh -c "cd #{Settings.root} && rails #{arguments["command"]}"}
%x{sh -C #{Settings.root} -c "rails #{arguments["command"]}"}
Settings.root
{Settings.root
c
command_information
c
command_information
c
id
c
options[:id]
c
uri
c
uri
c
id
c
command_information
c
ruby pairprogrammer.rb coder run -c --id some_id
command_information
c
command_information
c
command_information
c
arguments
command
c
command
c
response.body.empty?
response.body.blank?
response.body.present?
response.body.empty?
response.body
c
arguments
command
c
response.body
response
c
command
c
arguments
command
c
command
c
command
c
JSON.parse(response.body)
JSON
response.body
response
c
arguments
command
c
response.body
response
c
body
c
command
c
command
c
command["command"]
command = response["command"]
response
c
arguments
command
